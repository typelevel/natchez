# This file was automatically generated by sbt-github-actions using the
# githubWorkflowGenerate task. You should add and commit this file to
# your git repository. It goes without saying that you shouldn't edit
# this file by hand! Instead, if you wish to make changes, you should
# change your sbt build configuration to revise the workflow description
# to meet your needs, then regenerate this file.

name: Continuous Integration

on:
  pull_request:
    branches: ['**', '!update/**', '!pr/**']
  push:
    branches: ['**', '!update/**', '!pr/**']
    tags: [v*]

env:
  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}


concurrency:
  group: ${{ github.workflow }} @ ${{ github.ref }}
  cancel-in-progress: true

jobs:
  build:
    name: Build and Test
    strategy:
      matrix:
        os: [ubuntu-latest]
        scala: [2.12, 2.13, 3]
        java: [temurin@8]
        project: [rootJS, rootJVM, rootNative]
    runs-on: ${{ matrix.os }}
    timeout-minutes: 60
    steps:
      - name: Checkout current branch (full)
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Java (temurin@8)
        id: setup-java-temurin-8
        if: matrix.java == 'temurin@8'
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: 8
          cache: sbt

      - name: sbt update
        if: matrix.java == 'temurin@8' && steps.setup-java-temurin-8.outputs.cache-hit == 'false'
        run: sbt +update

      - name: Check that workflows are up to date
        run: sbt githubWorkflowCheck

      - name: Check headers and formatting
        if: matrix.java == 'temurin@8' && matrix.os == 'ubuntu-latest'
        run: sbt 'project ${{ matrix.project }}' '++ ${{ matrix.scala }}' headerCheckAll scalafmtCheckAll 'project /' scalafmtSbtCheck

      - name: scalaJSLink
        if: matrix.project == 'rootJS'
        run: sbt 'project ${{ matrix.project }}' '++ ${{ matrix.scala }}' Test/scalaJSLinkerResult

      - name: nativeLink
        if: matrix.project == 'rootNative'
        run: sbt 'project ${{ matrix.project }}' '++ ${{ matrix.scala }}' Test/nativeLink

      - name: Test
        run: sbt 'project ${{ matrix.project }}' '++ ${{ matrix.scala }}' test

      - name: Check binary compatibility
        if: matrix.java == 'temurin@8' && matrix.os == 'ubuntu-latest'
        run: sbt 'project ${{ matrix.project }}' '++ ${{ matrix.scala }}' mimaReportBinaryIssues

      - name: Generate API documentation
        if: matrix.java == 'temurin@8' && matrix.os == 'ubuntu-latest'
        run: sbt 'project ${{ matrix.project }}' '++ ${{ matrix.scala }}' doc

      - name: Make target directories
        if: github.event_name != 'pull_request' && (startsWith(github.ref, 'refs/tags/v') || github.ref == 'refs/heads/main' || github.ref == 'refs/heads/series/0.1')
        run: mkdir -p modules/mtl/native/target modules/lightstep-grpc/target modules/log/jvm/target modules/noop/jvm/target modules/mock/target modules/testkit/native/target modules/log/native/target modules/testkit/js/target modules/core/native/target modules/docs/target modules/lightstep-http/target modules/datadog/target modules/xray/.jvm/target modules/opentracing/target modules/noop/native/target modules/xray/.js/target modules/core/js/target modules/noop/js/target modules/core/jvm/target modules/jaeger/target modules/opencensus/target modules/honeycomb/target modules/log/js/target modules/mtl/js/target modules/newrelic/target modules/log-odin/target modules/mtl/jvm/target modules/testkit/jvm/target modules/opentelemetry/target modules/lightstep/target project/target

      - name: Compress target directories
        if: github.event_name != 'pull_request' && (startsWith(github.ref, 'refs/tags/v') || github.ref == 'refs/heads/main' || github.ref == 'refs/heads/series/0.1')
        run: tar cf targets.tar modules/mtl/native/target modules/lightstep-grpc/target modules/log/jvm/target modules/noop/jvm/target modules/mock/target modules/testkit/native/target modules/log/native/target modules/testkit/js/target modules/core/native/target modules/docs/target modules/lightstep-http/target modules/datadog/target modules/xray/.jvm/target modules/opentracing/target modules/noop/native/target modules/xray/.js/target modules/core/js/target modules/noop/js/target modules/core/jvm/target modules/jaeger/target modules/opencensus/target modules/honeycomb/target modules/log/js/target modules/mtl/js/target modules/newrelic/target modules/log-odin/target modules/mtl/jvm/target modules/testkit/jvm/target modules/opentelemetry/target modules/lightstep/target project/target

      - name: Upload target directories
        if: github.event_name != 'pull_request' && (startsWith(github.ref, 'refs/tags/v') || github.ref == 'refs/heads/main' || github.ref == 'refs/heads/series/0.1')
        uses: actions/upload-artifact@v4
        with:
          name: target-${{ matrix.os }}-${{ matrix.java }}-${{ matrix.scala }}-${{ matrix.project }}
          path: targets.tar

  publish:
    name: Publish Artifacts
    needs: [build]
    if: github.event_name != 'pull_request' && (startsWith(github.ref, 'refs/tags/v') || github.ref == 'refs/heads/main' || github.ref == 'refs/heads/series/0.1')
    strategy:
      matrix:
        os: [ubuntu-latest]
        java: [temurin@8]
    runs-on: ${{ matrix.os }}
    steps:
      - name: Checkout current branch (full)
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Java (temurin@8)
        id: setup-java-temurin-8
        if: matrix.java == 'temurin@8'
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: 8
          cache: sbt

      - name: sbt update
        if: matrix.java == 'temurin@8' && steps.setup-java-temurin-8.outputs.cache-hit == 'false'
        run: sbt +update

      - name: Download target directories (2.12, rootJS)
        uses: actions/download-artifact@v4
        with:
          name: target-${{ matrix.os }}-${{ matrix.java }}-2.12-rootJS

      - name: Inflate target directories (2.12, rootJS)
        run: |
          tar xf targets.tar
          rm targets.tar

      - name: Download target directories (2.12, rootJVM)
        uses: actions/download-artifact@v4
        with:
          name: target-${{ matrix.os }}-${{ matrix.java }}-2.12-rootJVM

      - name: Inflate target directories (2.12, rootJVM)
        run: |
          tar xf targets.tar
          rm targets.tar

      - name: Download target directories (2.12, rootNative)
        uses: actions/download-artifact@v4
        with:
          name: target-${{ matrix.os }}-${{ matrix.java }}-2.12-rootNative

      - name: Inflate target directories (2.12, rootNative)
        run: |
          tar xf targets.tar
          rm targets.tar

      - name: Download target directories (2.13, rootJS)
        uses: actions/download-artifact@v4
        with:
          name: target-${{ matrix.os }}-${{ matrix.java }}-2.13-rootJS

      - name: Inflate target directories (2.13, rootJS)
        run: |
          tar xf targets.tar
          rm targets.tar

      - name: Download target directories (2.13, rootJVM)
        uses: actions/download-artifact@v4
        with:
          name: target-${{ matrix.os }}-${{ matrix.java }}-2.13-rootJVM

      - name: Inflate target directories (2.13, rootJVM)
        run: |
          tar xf targets.tar
          rm targets.tar

      - name: Download target directories (2.13, rootNative)
        uses: actions/download-artifact@v4
        with:
          name: target-${{ matrix.os }}-${{ matrix.java }}-2.13-rootNative

      - name: Inflate target directories (2.13, rootNative)
        run: |
          tar xf targets.tar
          rm targets.tar

      - name: Download target directories (3, rootJS)
        uses: actions/download-artifact@v4
        with:
          name: target-${{ matrix.os }}-${{ matrix.java }}-3-rootJS

      - name: Inflate target directories (3, rootJS)
        run: |
          tar xf targets.tar
          rm targets.tar

      - name: Download target directories (3, rootJVM)
        uses: actions/download-artifact@v4
        with:
          name: target-${{ matrix.os }}-${{ matrix.java }}-3-rootJVM

      - name: Inflate target directories (3, rootJVM)
        run: |
          tar xf targets.tar
          rm targets.tar

      - name: Download target directories (3, rootNative)
        uses: actions/download-artifact@v4
        with:
          name: target-${{ matrix.os }}-${{ matrix.java }}-3-rootNative

      - name: Inflate target directories (3, rootNative)
        run: |
          tar xf targets.tar
          rm targets.tar

      - name: Import signing key
        if: env.PGP_SECRET != '' && env.PGP_PASSPHRASE == ''
        env:
          PGP_SECRET: ${{ secrets.PGP_SECRET }}
          PGP_PASSPHRASE: ${{ secrets.PGP_PASSPHRASE }}
        run: echo $PGP_SECRET | base64 -d -i - | gpg --import

      - name: Import signing key and strip passphrase
        if: env.PGP_SECRET != '' && env.PGP_PASSPHRASE != ''
        env:
          PGP_SECRET: ${{ secrets.PGP_SECRET }}
          PGP_PASSPHRASE: ${{ secrets.PGP_PASSPHRASE }}
        run: |
          echo "$PGP_SECRET" | base64 -d -i - > /tmp/signing-key.gpg
          echo "$PGP_PASSPHRASE" | gpg --pinentry-mode loopback --passphrase-fd 0 --import /tmp/signing-key.gpg
          (echo "$PGP_PASSPHRASE"; echo; echo) | gpg --command-fd 0 --pinentry-mode loopback --change-passphrase $(gpg --list-secret-keys --with-colons 2> /dev/null | grep '^sec:' | cut --delimiter ':' --fields 5 | tail -n 1)

      - name: Publish
        env:
          SONATYPE_USERNAME: ${{ secrets.SONATYPE_USERNAME }}
          SONATYPE_PASSWORD: ${{ secrets.SONATYPE_PASSWORD }}
          SONATYPE_CREDENTIAL_HOST: ${{ secrets.SONATYPE_CREDENTIAL_HOST }}
        run: sbt tlCiRelease

  dependency-submission:
    name: Submit Dependencies
    if: github.event_name != 'pull_request'
    strategy:
      matrix:
        os: [ubuntu-latest]
        java: [temurin@8]
    runs-on: ${{ matrix.os }}
    steps:
      - name: Checkout current branch (full)
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Java (temurin@8)
        id: setup-java-temurin-8
        if: matrix.java == 'temurin@8'
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: 8
          cache: sbt

      - name: sbt update
        if: matrix.java == 'temurin@8' && steps.setup-java-temurin-8.outputs.cache-hit == 'false'
        run: sbt +update

      - name: Submit Dependencies
        uses: scalacenter/sbt-dependency-submission@v2
        with:
          modules-ignore: natchez-examples_2.12 natchez-examples_2.13 natchez-examples_3 rootjs_2.12 rootjs_2.13 rootjs_3 coretests_sjs1_2.12 coretests_sjs1_2.13 coretests_sjs1_3 coretests_2.12 coretests_2.13 coretests_3 rootjvm_2.12 rootjvm_2.13 rootjvm_3 rootnative_2.12 rootnative_2.13 rootnative_3 coretests_native0.4_2.12 coretests_native0.4_2.13 coretests_native0.4_3
          configs-ignore: test scala-tool scala-doc-tool test-internal

  docs:
    name: Make site
    strategy:
      matrix:
        os: [ubuntu-latest]
        scala: [2.13.12]
        java: [temurin@11]
    runs-on: ${{ matrix.os }}
    steps:
      - name: Checkout current branch (full)
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Java (temurin@8)
        id: setup-java-temurin-8
        if: matrix.java == 'temurin@8'
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: 8
          cache: sbt

      - name: sbt update
        if: matrix.java == 'temurin@8' && steps.setup-java-temurin-8.outputs.cache-hit == 'false'
        run: sbt +update

      - run: sbt '++ ${{ matrix.scala }}' docs/makeSite
